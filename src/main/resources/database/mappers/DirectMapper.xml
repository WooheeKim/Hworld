<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.hworld.base.dao.DirectDAO">
  
  	<sql id="search">
		<where>
			<if test="kind=='directName'">
				TITLE LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="kind=='dircetContents'">
				CONTENTS LIKE CONCAT('%',#{search},'%')
			</if>
			<if test="kind=='slicedCode'">
				CONTENTS LIKE CONCAT('%',#{search},'%')
			</if>
		</where>
	</sql>
  
  	<!-- 상품 리스트 -->
  	<select id="getPrice" resultType="DirectVO" parameterType="DirectVO">
  		SELECT SUBSTRING(DIRECTCODE, -5) AS slicedCode,
        DIRECTCODE, DIRECTSTOCK, CATEGORYCODE, BRANDCODE, COLORCODE, SAVECAPACITY 
		FROM DIRECT
  	</select>
   
 
  	<select id="getList" resultType="DirectVO" parameterType="Pager">
    SELECT SUBSTRING(D.directCode, -5) AS slicedCode,
        D.*,
        MIN(D.DIRECTPRICE) AS INITPRICE,
        AVG(R.RATE) AS rate
	    FROM DIRECT D
	    LEFT JOIN ORDERDIRECT OD ON SUBSTRING(D.directCode, -5) = SUBSTRING(OD.DIRECTCODE, -5)
	    LEFT JOIN REVIEW R ON OD.ORDERNUM = R.ORDERNUM
	    GROUP BY SUBSTRING(D.DIRECTCODE, -5), D.DIRECTNAME, D.DIRECTCONTENTS
	    <choose>
	        <when test="sortType == 'priceHigh'">
	            ORDER BY INITPRICE DESC
	        </when>
	        <when test="sortType == 'priceLow'">
	            ORDER BY INITPRICE ASC
	        </when>
	        <otherwise>
	            ORDER BY D.UPLOADDATE DESC
	        </otherwise>
	    </choose>
	    LIMIT #{startRow}, #{perPage}
	</select>
  	

	<!-- 상품 개수 -->  	
	<select id="getTotalCount" parameterType="Pager" resultType="Long">
		SELECT COUNT(DIRECTCODE) FROM DIRECT
		<include refid="search"></include>
	</select> 
	
	<!-- 상품 디테일 페이지 default 값으로 P01/BS/ -->
	<select id="getDetail" parameterType="DirectVO" resultType="DirectVO"> 
	   SELECT D.*, CC.VALUE AS value, RIGHT(D.DIRECTCODE, 5) AS slicedCode
		FROM DIRECT D
		INNER JOIN COMMONCODE CC ON D.BRANDCODE = CC.CODE
		WHERE RIGHT(D.DIRECTCODE, 5) = #{slicedCode}
	</select>


	<!-- 상품 등록 --> 	
	<insert id="setInsert" parameterType="DirectVO">
		INSERT INTO DIRECT(DIRECTCODE, DIRECTNAME, DIRECTCONTENTS, DIRECTPRICE, DIRECTSTOCK, CATEGORYCODE, BRANDCODE, COLORCODE, SAVECAPACITY, UPLOADDATE)
		VALUES (#{directCode}, #{directName}, #{directContents}, #{directPrice}, #{directStock}, #{categoryCode}, #{brandCode}, #{colorCode}, #{saveCapacity}, now())

	</insert>
	 	
  	<!-- 상품 삭제 -->
	<delete id="setDelete" parameterType="DirectVO">
	  DELETE FROM DIRECT
	  WHERE directCode LIKE CONCAT('%', #{slicedCode}, '%')
	</delete>
	
	<!-- 상품 수정 -->
	<update id="setUpdate" parameterType="DirectVO">
		UPDATE DIRECT
		SET DIRECTNAME = #{directName}, DIRECTCONTENTS = #{directContents}, DIRECTPRICE = #{directPrice}, DIRECTSTOCK = #{directStock}, CATEGORYCODE = #{categoryCode}, BRANDCODE = #{brandCode}, COLORCODE = #{colorCode}, SAVECAPACITY = #{saveCapacity}
		WHERE RIGHT(DIRECTCODE, 5) = #{slicedCode}
	</update>
	
	
	<!-- 리뷰 -->
	<select id="getReviewList" parameterType="DirectVO" resultType="ReviewVO">
	SELECT R.*, D.DIRECTNAME, D.DIRECTCODE, SUBSTRING(D.DIRECTCODE, -5) AS slicedCode
		FROM REVIEW R
		LEFT JOIN ORDERDIRECT OD ON OD.ORDERNUM = R.ORDERNUM
		LEFT JOIN DIRECT D ON D.DIRECTCODE =OD.DIRECTCODE
		HAVING SLICEDCODE = #{slicedCode}
		ORDER BY R.REGDATE DESC
	</select>


  </mapper>